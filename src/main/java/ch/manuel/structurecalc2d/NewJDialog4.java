//Autor: Manuel Schmocker
//Datum: 31.07.2014

package ch.manuel.structurecalc2d;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


public class NewJDialog4 extends javax.swing.JDialog {
    private final String NO_DATA = "no data";
    private final java.text.DecimalFormat myFormat = new java.text.DecimalFormat( "0.000" );
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    
    //Konstruktor für Dialog 4
    public NewJDialog4(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        addTable();
        
        //Position Fenster festlegen
        int width = this.getWidth();
        int hight = this.getHeight();
        java.awt.Dimension d = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((int) ((d.getWidth() - width)/2), (int) ((d.getHeight() - hight)/2));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jButton1.setText("Schliessen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Resultate Punkte:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Resultate Stäbe:");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTextPane1.setEditable(false);
        jTextPane1.setBorder(null);
        jTextPane1.setEnabled(false);
        jScrollPane4.setViewportView(jTextPane1);

        jMenu1.setText("Edit");

        jMenuItem1.setText("Copy table1 to clipboard");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Copy table2 to clipboard");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        copyToClipboard1();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        copyToClipboard2();
    }//GEN-LAST:event_jMenuItem2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables


    
    // Variables declaration - Eigene Variablen
    private static javax.swing.JTable jTable1;
    private static javax.swing.JTable jTable2;
    private static DefaultTableModel tableModel1;
    private static DefaultTableModel tableModel2;
    
    // Beschriftung Titel Tabelle
    final private String titel_11 = "Pt. ID";   //Col.: 0
    final private String titel_12 = "Pos. X";   //Col.: 1
    final private String titel_13 = "Pos. Y";   //Col.: 2
    final private String titel_14 = "Def. X";   //Col.: 3
    final private String titel_15 = "Def. Y";   //Col.: 4
    final private int defaultNumbersOfRows1 = 0;
    final private String titel_21 = "Beam ID";          //Col.: 0
    final private String titel_22 = "ID Pt.1";          //Col.: 1
    final private String titel_23 = "ID Pt.2";          //Col.: 2
    final private String titel_24 = "Kraft [kN]";       //Col.: 3
    final private String titel_25 = "Def. ε [-]";       //Col.: 4
    final private String titel_26 = "Fläche [mm2]";     //Col.: 5
    final private String titel_27 = "E-Mod [N/mm2]";    //Col.: 6
    final private int defaultNumbersOfRows2 = 0;
    
    // Methode zum Einfügen der Tabelle in das entsprechende ScrollPanes
    private void addTable() {
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        // Tabelle 1 (oben)
        tableModel1 = new javax.swing.table.DefaultTableModel(new String[]{titel_11, titel_12, titel_13, titel_14, titel_15}, defaultNumbersOfRows1);
        jTable1 = new javax.swing.JTable();
        jTable1.setModel(tableModel1);
        jTable1.setEnabled(false);
        
        jTable1.setPreferredSize(jScrollPane1.getSize());
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        //Breite: 400
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        
        // Tabelle 1 (unten)
        tableModel2 = new javax.swing.table.DefaultTableModel(new String[]{titel_21, titel_22, titel_23, titel_24, titel_25, titel_26, titel_27}, defaultNumbersOfRows2);
        jTable2 = new javax.swing.JTable();
        jTable2.setModel(tableModel2);
        jTable2.setEnabled(false);

        jTable2.setPreferredSize(jScrollPane2.getSize());
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        //Breite: 500
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTable2.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTable2.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTable2.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        jTable2.getColumnModel().getColumn(4).setPreferredWidth(80);
        jTable2.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        jTable2.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTable2.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        jTable2.getColumnModel().getColumn(6).setPreferredWidth(80);
        jTable2.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
        
        jScrollPane1.setViewportView(jTable1);
        jScrollPane2.setViewportView(jTable2);
    }
    
    //Tabelle mit Werten füllen
    public void setContentTable() {
        //Tabelle1 leeren
        for(int i = (tableModel1.getRowCount() - 1); i >= 0; i--){
            tableModel1.removeRow(i);
        }
        //Tabelle2 leeren
        for(int i = (tableModel2.getRowCount() - 1); i >= 0; i--){
            tableModel2.removeRow(i);
        }
        
        //Tabelle1 mit Werten füllen
        for (int i = 0; i < Structure.getNbPts(); i++) {
            tableModel1.addRow(new Object[]{""});   //Neue Reihe
            jTable1.setValueAt(Structure.getPt(i).getPtID()+1, i, 0);                       //Col.: 0 Pt. ID
            jTable1.setValueAt(myFormat.format(Structure.getPt(i).getValX()), i, 1);        //Col.: 1 Pos. X
            jTable1.setValueAt(myFormat.format(Structure.getPt(i).getValY()), i, 2);        //Col.: 2 Pos. Y
            if ( Structure.getCalculated() ) {
                jTable1.setValueAt(myFormat.format(Structure.getPt(i).getDisplacementX()), i, 3);       //Col.: 3 Def. X
                jTable1.setValueAt(myFormat.format(Structure.getPt(i).getDisplacementY()), i, 4);       //Col.: 4 Def. Y
            } else {
                jTable1.setValueAt( NO_DATA, i, 3);        //Keine Daten, wenn nicht berechnet
                jTable1.setValueAt( NO_DATA, i, 4);        //Keine Daten, wenn nicht berechnet
            }
        }
        jTable1.setPreferredSize(new java.awt.Dimension(400, tableModel1.getRowCount()*jTable1.getRowHeight()));
        
        //Tabelle2 mit Werten füllen
        for (int i = 0; i < Structure.getNbBeams(); i++) {
            tableModel2.addRow(new Object[]{""});   //Neue Reihe
            jTable2.setValueAt(Structure.getBeam(i).getBeamID(), i, 0);                     //Col.: 0 Stab ID
            jTable2.setValueAt(Structure.getBeam(i).getStartPt().getPtID()+1, i, 1);        //Col.: 1 ID Start Pt.
            jTable2.setValueAt(Structure.getBeam(i).getEndPt().getPtID()+1, i, 2);          //Col.: 2 ID End Pt.
            jTable2.setValueAt(Structure.getBeam(i).getSurf(), i, 5);                       //Col.: 5 Surf.
            jTable2.setValueAt(Structure.getBeam(i).getModul(), i, 6);                      //Col.: 6 E-Mod.
            if ( Structure.getCalculated() ) {
                jTable2.setValueAt(myFormat.format(Structure.getBeam(i).getForce()), i, 3);         //Col.: 3 Kraft [kN]
                jTable2.setValueAt(myFormat.format(Structure.getBeam(i).getDef()), i, 4);           //Col.: 4 Def. ε [-]
            } else {
                jTable2.setValueAt( NO_DATA, i, 3);        //Keine Daten, wenn nicht berechnet
                jTable2.setValueAt( NO_DATA, i, 4);        //Keine Daten, wenn nicht berechnet
            }
        }
        jTable2.setPreferredSize(new java.awt.Dimension(500, tableModel2.getRowCount()*jTable2.getRowHeight()));
        
        //Berechnungszeit ergänzen
        if ( Structure.getCalculated() ) {
            jTextPane1.setText( "Berechnungsdauer: " + Calculation.getCalculationTime() + " Milisec\n" +
                                 "Anzahl Iterationen: " + Calculation.getIterations() + "\n" +
                                 "Erreichte Genauigkeit: " + Calculation.getAccuracy());
        } else {
            jTextPane1.setText( "" );
        }
    }
    
    //Werte Tabelle 1 (Punkte) in Zwischenspeicher Kopieren
    private void copyToClipboard1() {
        String str = "Pt. ID\tPos. X\tPos. Y\tDef. X\tDef. Y\n";
        
        //String mit Werten füllen
        for (int i = 0; i < Structure.getNbPts(); i++) {
            str += Integer.toString(Structure.getPt(i).getPtID());           //Col.: 0 Pt. ID
            str += "\t" + Double.toString(Structure.getPt(i).getValX());    //Col.: 1 Pos. X
            str += "\t" + Double.toString(Structure.getPt(i).getValY());    //Col.: 2 Pos. Y
            if ( Structure.getCalculated() ) {
                str += "\t" + Double.toString(Structure.getPt(i).getDisplacementX());   //Col.: 3 Def. X
                str += "\t" + Double.toString(Structure.getPt(i).getDisplacementY());   //Col.: 4 Def. Y
            } else {
                str += "\t" + NO_DATA;      //Keine Daten, wenn nicht berechnet
                str += "\t" + NO_DATA;      //Keine Daten, wenn nicht berechnet
            }
            str += "\n";
        }
        StringSelection selection = new StringSelection(str);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(selection, selection);
    }
    
    //Werte Tabelle 1 (Punkte) in Zwischenspeicher Kopieren
    private void copyToClipboard2() {
        String str = "Pt. ID\tID Start Pt.\tID End Pt.\tKraft [kN]\tDef. ε[-]\tSurface [mm2]\t E-Modul [N/mm2]\n";
        
        //String mit Werten füllen
        for (int i = 0; i < Structure.getNbBeams(); i++) {
            str += Integer.toString(Structure.getBeam(i).getBeamID());                      //Col.: 0 Stab ID
            str += "\t" + Integer.toString(Structure.getBeam(i).getStartPt().getPtID()+1);         //Col.: 1 ID Start Pt.
            str += "\t" + Integer.toString(Structure.getBeam(i).getEndPt().getPtID()+1);           //Col.: 2 ID End Pt.
            if ( Structure.getCalculated() ) {
                str += "\t" + Double.toString(Structure.getBeam(i).getForce());        //Col.: 3 Kraft [kN]
                str += "\t" + Double.toString(Structure.getBeam(i).getDef());          //Col.: 4 Def. ε [-]
            } else {
                str += "\t" + NO_DATA;      //Keine Daten, wenn nicht berechnet
                str += "\t" + NO_DATA;      //Keine Daten, wenn nicht berechnet
            }
            str += "\t" + Double.toString(Structure.getBeam(i).getSurf());                         //Col.: 5 Surf
            str += "\t" + Double.toString(Structure.getBeam(i).getModul());                        //Col.: 6 E-Mod
            str += "\n";
        }
        StringSelection selection = new StringSelection(str);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(selection, selection);
    }
}
